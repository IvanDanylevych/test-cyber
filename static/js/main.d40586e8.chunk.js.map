{"version":3,"sources":["store/actions/actionTypes.js","store/actions/tableData.js","store/selectors/dataSelector.js","store/selectors/loadingSelector.js","store/selectors/errorSelector.js","store/selectors/searchSelector.js","store/selectors/filteredDataSelector.js","components/Spinner/index.js","components/Table/index.js","App.js","shared/utility.js","store/reducers/tableData.js","index.js"],"names":["GET_DATA_START","GET_DATA_SUCCESS","GET_DATA_FAIL","FILTER_DATA","getData","dispatch","type","actionTypes","axios","get","then","response","data","catch","err","error","DataSelector","state","LoadingSelector","loading","ErrorSelector","SearchSelector","inputValue","FilteredDataSelector","filteredData","Spinner","className","useStylesPagination","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onPageChange","IconButton","onClick","event","disabled","direction","Math","ceil","max","useStyles","table","minWidth","BasicTable","useState","setRowsPerPage","setPage","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","slice","sort","a","b","name","localeCompare","username","email","map","row","id","phone","website","TableFooter","TablePagination","rowsPerPageOptions","label","value","colSpan","length","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","App","useDispatch","useSelector","searchValue","useEffect","onChange","e","getFilteredData","placeholder","updateObject","oldObject","updatedProperties","initialState","getDataStart","action","getDataSuccess","getDataFail","arr","searchInput","filter","obj","Object","values","flat","some","v","toLowerCase","includes","reducer","composeEnhancers","process","Node_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","TableData","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d40586e8.chunk.js","sourcesContent":["export const GET_DATA_START = 'GET_DATA_START'\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS'\nexport const GET_DATA_FAIL = 'GET_DATA_FAIL'\n\nexport const FILTER_DATA = 'FILTER_DATA'\n","import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\nexport const getDataStart = () => {\n  return {\n    type: actionTypes.GET_DATA_START,\n  }\n}\n\nexport const getDataSuccess = data => {\n  return {\n    type: actionTypes.GET_DATA_SUCCESS,\n    data,\n  }\n}\n\nexport const getDataFail = error => {\n  return {\n    type: actionTypes.GET_DATA_FAIL,\n    error,\n  }\n}\n\nexport const getData = () => {\n  return dispatch => {\n    dispatch(getDataStart())\n    axios\n      .get('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n        dispatch(getDataSuccess(response.data))\n      })\n      .catch(err => {\n        dispatch(getDataFail(err.response.data.error))\n      })\n  }\n}\n\nexport const getFilteredData = searchValue => {\n  return {\n    type: actionTypes.FILTER_DATA,\n    searchValue,\n  }\n}\n","export const DataSelector = state => state.data.data\n","export const LoadingSelector = state => state.data.loading\n","export const ErrorSelector = state => state.data.error\n","export const SearchSelector = state => state.data.inputValue\n","export const FilteredDataSelector = state => state.data.filteredData\n","import React from 'react'\n\nimport './index.scss'\n\nconst Spinner = () => <div className='Loader'>Loading...</div>\n\nexport default Spinner\n","import React, { useState } from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\nconst useStylesPagination = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}))\n\nfunction TablePaginationActions(props) {\n  const classes = useStylesPagination()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onPageChange } = props\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='first page'\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n})\n\nexport default function BasicTable({ data }) {\n  const classes = useStyles()\n  const [rowsPerPage, setRowsPerPage] = useState(5)\n  const [page, setPage] = useState(0)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell align='right'>Id</TableCell>\n            <TableCell align='right'>Name</TableCell>\n            <TableCell align='right'>Username</TableCell>\n            <TableCell align='right'>Email</TableCell>\n            <TableCell align='right'>Phone</TableCell>\n            <TableCell align='right'>Website</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : data\n          )\n            .sort(\n              (a, b) =>\n                a.name.localeCompare(b.name) ||\n                a.username - b.username ||\n                a.email - b.email,\n            )\n            .map(row => (\n              <TableRow key={row.id}>\n                <TableCell align='right'>{row.id}</TableCell>\n                <TableCell align='right'>{row.name}</TableCell>\n                <TableCell align='right'>{row.username}</TableCell>\n                <TableCell align='right'>{row.email}</TableCell>\n                <TableCell align='right'>{row.phone}</TableCell>\n                <TableCell align='right'>{row.website}</TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={data.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getData, getFilteredData } from './store/actions/tableData'\nimport {\n  DataSelector,\n  LoadingSelector,\n  ErrorSelector,\n  SearchSelector,\n  FilteredDataSelector,\n} from './store/selectors'\n\nimport Spinner from './components/Spinner'\nimport Table from './components/Table'\n\nimport './index.scss'\n\nfunction App() {\n  const dispatch = useDispatch()\n  const data = useSelector(DataSelector)\n  const loading = useSelector(LoadingSelector)\n  const error = useSelector(ErrorSelector)\n  const searchValue = useSelector(SearchSelector)\n  const filteredData = useSelector(FilteredDataSelector)\n\n  useEffect(() => {\n    dispatch(getData())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <>\n      {error && <div>Oops, something went wrong</div>}\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Table data={searchValue.length > 0 ? filteredData : data} />\n      )}\n      <div className='inputWrapper'>\n        <input\n          onChange={e => dispatch(getFilteredData(e.target.value))}\n          value={searchValue}\n          placeholder='Search'\n          className='inputField'\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  }\n}\n\nexport const handleSearch = (arr, searchInput) =>\n  arr.filter(obj =>\n    Object.values(obj)\n      .flat()\n      .some(v => `${v}`.toLowerCase().includes(`${searchInput}`.toLowerCase())),\n  )\n","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject, handleSearch } from '../../shared/utility'\n\nconst initialState = {\n  data: [],\n  filteredData: [],\n  inputValue: '',\n  loading: false,\n  error: null,\n}\n\nconst getDataStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true })\n}\n\nconst getDataSuccess = (state, action) => {\n  return updateObject(state, {\n    data: action.data,\n    error: null,\n    loading: false,\n  })\n}\n\nconst getDataFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  })\n}\n\nconst getFilteredData = (state, action) => {\n  const filteredData = handleSearch(state.data, action.searchValue)\n  return updateObject(state, {\n    inputValue: action.searchValue,\n    filteredData,\n  })\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_DATA_START:\n      return getDataStart(state, action)\n    case actionTypes.GET_DATA_SUCCESS:\n      return getDataSuccess(state, action)\n    case actionTypes.GET_DATA_FAIL:\n      return getDataFail(state, action)\n    case actionTypes.FILTER_DATA:\n      return getFilteredData(state, action)\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport App from './App'\nimport TableData from './store/reducers/tableData'\n\nimport './index.scss'\n\nconst composeEnhancers =\n  process.env.Node_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose\n\nconst rootReducer = combineReducers({\n  data: TableData,\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n"],"sourceRoot":""}